// <auto-generated />
using AppApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppApi.Migrations
{
    [DbContext(typeof(AppApiContext))]
    [Migration("20240705141858_Setup0.2")]
    partial class Setup02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppApi.Models.Empleado", b =>
                {
                    b.Property<int>("Idempleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idempleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idempleado"));

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "edad");

                    b.Property<string>("Razonsocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "razonsocial");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "salario");

                    b.Property<int>("TipoIdtipo")
                        .HasColumnType("int");

                    b.HasKey("Idempleado");

                    b.HasIndex("TipoIdtipo");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("AppApi.Models.Tipo", b =>
                {
                    b.Property<int>("Idtipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idtipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtipo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasAnnotation("Relational:JsonPropertyName", "descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "nombre");

                    b.HasKey("Idtipo");

                    b.ToTable("Tipos");

                    b.HasAnnotation("Relational:JsonPropertyName", "idtipo");
                });

            modelBuilder.Entity("AppApi.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idusuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.HasKey("Idusuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AppApi.Models.Empleado", b =>
                {
                    b.HasOne("AppApi.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoIdtipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
